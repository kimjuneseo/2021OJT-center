/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.54
 * Generated at: 2021-11-30 07:02:30 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.board;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.text.SimpleDateFormat;
import board.BoardDBBean;
import board.BoardDataBean;
import java.util.List;
import java.util.ArrayList;

public final class boardList_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("java.text.SimpleDateFormat");
    _jspx_imports_classes.add("board.BoardDataBean");
    _jspx_imports_classes.add("board.BoardDBBean");
    _jspx_imports_classes.add("java.util.ArrayList");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("<meta charset=\"UTF-8\">\n");
      out.write("<title>Insert title here</title>\n");
      out.write("<link href=\"https://fonts.googleapis.com/css2?family=Jua&family=Monoton&display=swap\" rel=\"stylesheet\">\n");
      out.write("<style>\n");
      out.write("@import url('https://fonts.googleapis.com/css2?family=Permanent+Marker&display=swap');\n");
      out.write("/*전체영역*/\n");
      out.write("a{text-decoration: none; color:#99424f;}\n");
      out.write("#container{ width: 900px; margin: 20px auto;}\n");
      out.write(".btn { padding:10px; background: #b4baba; border: none; border-radius: 5px; font-family: 'Noto Sans KR', sans-serif; color: #; cursor: pinter; }\n");
      out.write(".btn:hover { background: #585555; transition: .5s}\n");
      out.write("/* 제목 */\n");
      out.write("#m_title { margin-bottom: 10px; font-size: 3em; text-align: center; font-family: 'Permanent Marker', cursive; }\n");
      out.write("#s_title { margin-bottom: 10px; font-size: 1.75em; font-weight: 900; font-family: 'Noto Sans KR', sans-serif; text-align: center;}\n");
      out.write("/* 로그인, 로그아웃 */\n");
      out.write("#d_login {display: flex; justify-content: right; gap:20px}\n");
      out.write("#d_id{color: #705e7b; cursor: pointer;}\n");
      out.write("#btn_logout{color:#99424f; cursor:pinter;}\n");
      out.write("\n");
      out.write("/* 검색  */\n");
      out.write("#d_search { text-align: center; margin-bottom: 10px }\n");
      out.write("#s_search { width: 100px; height: 25px; }\n");
      out.write("#i_search { width: 350px; height: 25px; }\n");
      out.write("#btn_search { width: 100px; height: 25px; background: #add5bd; border: 0;}\n");
      out.write("/* 테이블 */\n");
      out.write("table { width: 100%; border: 1px solid #000; board-collapse: collapse;}\n");
      out.write("td { border: 1px solid #000; }\n");
      out.write("tr { height: 50px; }\n");
      out.write("th,td { text-align: center; }\n");
      out.write("</style>\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("\n");
      out.write("\n");

// 로그인을 했을 때 생성한 세션을 확인
String id = (String)session.getAttribute("memberId");
if(id == null){
	out.print("<script>alert('로그인을 해주세요'); location = '../member/memberLoginForm.jsp'</script>");
}

//DB 연동, 쿼리 실행
BoardDBBean boardPro = BoardDBBean.getInstance();
List<BoardDataBean> boardList = boardPro.getBoardList();
SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd hh:mm");
/* int cnt = boardPro.getBoardListCount(); */
int cnt = boardList.size();

      out.write("\n");
      out.write("\n");
      out.write("<div id=\"container\">\n");
      out.write("	<div id=\"m_title\">Street Woman Fighter</div>\n");
      out.write("	<div id=\"s_title\">커뮤니티 게시판</div>\n");
      out.write("	<div id=\"d_login\">\n");
      out.write("		<div id=\"d_id\">");
      out.print(id );
      out.write("님</div>\n");
      out.write("		<div id=\"btn_logout\"><a href=\"../member/memberLogout.jsp\">로그아웃</a></div>\n");
      out.write("	</div>\n");
      out.write("	<div id=\"d_search\">\n");
      out.write("		<select name=\"s_search\" id=\"s_search\">\n");
      out.write("			<option>제목</option>\n");
      out.write("			<option>내용</option>\n");
      out.write("			<option>작성자</option>\n");
      out.write("		</select>\n");
      out.write("		<input type=\"search\" id=\"i_search\">\n");
      out.write("		<input type=\"button\" value=\"검색\" id=\"btn_search\">\n");
      out.write("	</div>\n");
      out.write("	<table>\n");
      out.write("		<tr>\n");
      out.write("			<th width=\"6%\">번호</th>\n");
      out.write("			<th width=\"58%\">제목</th>\n");
      out.write("			<th width=\"15%\">작성자</th>\n");
      out.write("			<th width=\"15%\">작성일</th>\n");
      out.write("			<th width=\"6%\">조회수</th>\n");
      out.write("		</tr>\n");
      out.write("		");

		for(BoardDataBean board : boardList){
		
      out.write("\n");
      out.write("		<tr>\n");
      out.write("			<td>");
      out.print(cnt--  );
      out.write("</td>\n");
      out.write("			<td><a href=\"boardContent.jsp?num=");
      out.print(board.getNum());
      out.write('"');
      out.write('>');
      out.print(board.getSubject() );
      out.write("</a></td>\n");
      out.write("			<td>");
      out.print(board.getWriter() );
      out.write("</td>\n");
      out.write("			<td>");
      out.print(sdf.format(board.getRegdate()) );
      out.write("</td>\n");
      out.write("			<td>");
      out.print(board.getReadcount() );
      out.write("</td>\n");
      out.write("		</tr>\n");
      out.write("		");

		}
		
      out.write("\n");
      out.write("	</table>\n");
      out.write("</div>\n");
      out.write("\n");
      out.write("</body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
